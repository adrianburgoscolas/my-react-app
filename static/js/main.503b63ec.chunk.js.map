{"version":3,"sources":["Components/Comp.js","Redux/Action/action.js","App.js","reportWebVitals.js","Redux/Reducer/reducer.js","index.js"],"names":["Comp","id","sendResult","result","type","App","props","dispatch","useDispatch","useState","count","useEffect","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","state","action","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"6NAiCeA,EA/BF,WAET,OACG,gCACK,sBAAKC,GAAG,UAAR,UACI,qBAAKA,GAAG,UACR,qBAAKA,GAAG,cAEZ,qBAAKA,GAAG,SAAR,eACA,qBAAKA,GAAG,MAAR,eACA,qBAAKA,GAAG,MAAR,eACA,qBAAKA,GAAG,QAAR,eACA,qBAAKA,GAAG,OAAR,eACA,qBAAKA,GAAG,OAAR,eACA,qBAAKA,GAAG,MAAR,eACA,qBAAKA,GAAG,QAAR,eACA,qBAAKA,GAAG,QAAR,eACA,qBAAKA,GAAG,OAAR,eACA,qBAAKA,GAAG,OAAR,eACA,qBAAKA,GAAG,MAAR,eACA,qBAAKA,GAAG,WAAR,eACA,qBAAKA,GAAG,WAAR,eACA,qBAAKA,GAAG,SAAR,eACA,qBAAKA,GAAG,UAAR,eACA,qBAAKA,GAAG,QAAR,uB,OCnBGC,EAPI,SAACC,GAChB,MAAO,CACHC,KAAK,SACLD,WCqBOE,EAjBH,SAACC,GACX,IAAMC,EAAWC,cADI,EAEIC,mBAAS,GAFb,mBAEdC,EAFc,UAQrB,OAJAC,qBAAW,WACTJ,EAASL,EAAWQ,OAIpB,qBAAKE,UAAU,MAAf,SACE,cAAC,EAAD,OCLSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCECQ,EATC,WAAqB,IAApBC,EAAmB,uDAAX,EAAEC,EAAS,uCAChC,OAAOA,EAAOpB,MACV,IAAK,SACD,OAAOoB,EAAOrB,OAClB,QACI,OAAOoB,ICIbE,EAAQC,YAAYJ,GAG1BK,IAASC,OACP,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFI,SAASC,eAAe,SAM1BjB,M","file":"static/js/main.503b63ec.chunk.js","sourcesContent":["// import { useSelector } from \"react-redux\";\n\nconst Comp = ()=>{\n    // const result = useSelector((state)=>state)\n    return(\n       <div>\n            <div id='display'>\n                <div id='input'></div>\n                <div id='output'></div>\n            </div>\n            <div id=\"equals\">=</div>\n            <div id='one'>1</div>\n            <div id='two'>2</div>\n            <div id='three'>3</div>\n            <div id='four'>4</div>\n            <div id='five'>5</div>\n            <div id='six'>6</div>\n            <div id='seven'>7</div>\n            <div id='eight'>8</div>\n            <div id='nine'>9</div>\n            <div id='zero'>0</div>\n            <div id='add'>+</div>\n            <div id='subtract'>-</div>\n            <div id='multiply'>*</div>\n            <div id='divide'>/</div>\n            <div id='decimal'>.</div>\n            <div id='clear'>clear</div>\n            \n\n       </div>\n    )\n}\n\nexport default Comp;","const sendResult = (result)=>{\n    return {\n        type:'RESULT',\n        result\n    }\n}\n\nexport default sendResult;","// import logo from './logo.svg';\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport Comp from './Components/Comp'\nimport { useDispatch } from 'react-redux';\nimport sendResult from './Redux/Action/action';\n\nconst App = (props) => {\n  const dispatch = useDispatch();\n  const [count,setCount] = useState(0);\n\n  useEffect( () => {\n    dispatch(sendResult(count));\n  });\n\n  return (\n    <div className=\"App\">\n      <Comp />\n    </div>\n  );\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const reducer = (state = 0,action)=>{\n    switch(action.type){\n        case 'RESULT':\n            return action.result;\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport reducer from './Redux/Reducer/reducer'\n\nconst store = createStore(reducer);\n// store.subscribe(()=>{console.log(store.getState())});\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}