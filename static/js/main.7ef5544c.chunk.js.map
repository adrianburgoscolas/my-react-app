{"version":3,"sources":["Components/Comp.js","Redux/Action/action.js","App.js","reportWebVitals.js","Redux/Reducer/reducer.js","index.js"],"names":["Comp","result","useSelector","state","sendResult","type","App","props","dispatch","useDispatch","useState","count","setCount","useEffect","className","id","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","action","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"oOASeA,EAPF,WACT,IAAMC,EAASC,aAAY,SAACC,GAAD,OAASA,KACpC,OACI,gEAAmCF,MCE5BG,EAPI,SAACH,GAChB,MAAO,CACHI,KAAK,SACLJ,WCwBOK,EApBH,SAACC,GACX,IAAMC,EAAWC,cADI,EAEIC,mBAAS,GAFb,mBAEdC,EAFc,KAERC,EAFQ,KAQrB,OAJAC,qBAAW,WACTL,EAASJ,EAAWO,OAIpB,sBAAKG,UAAU,MAAf,UACE,wBAAQC,GAAG,MAAMC,QAAS,kBAAIJ,EAASD,EAAM,IAA7C,iBACA,wBAAQI,GAAG,MAAMC,QAAS,kBAAIJ,EAASD,EAAM,IAA7C,iBACA,oEAAuCA,KACvC,cAAC,EAAD,QCRSM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCECQ,EATC,WAAqB,IAApBvB,EAAmB,uDAAX,EAAEwB,EAAS,uCAChC,OAAOA,EAAOtB,MACV,IAAK,SACD,OAAOsB,EAAO1B,OAClB,QACI,OAAOE,ICIbyB,EAAQC,YAAYH,GAG1BI,IAASC,OACP,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFI,SAASC,eAAe,SAM1BhB,M","file":"static/js/main.7ef5544c.chunk.js","sourcesContent":["import { useSelector } from \"react-redux\";\n\nconst Comp = ()=>{\n    const result = useSelector((state)=>state)\n    return(\n        <div>functional comp global state {result}</div>\n    )\n}\n\nexport default Comp;","const sendResult = (result)=>{\n    return {\n        type:'RESULT',\n        result\n    }\n}\n\nexport default sendResult;","// import logo from './logo.svg';\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport Comp from './Components/Comp'\nimport { useDispatch } from 'react-redux';\nimport sendResult from './Redux/Action/action';\n\nconst App = (props) => {\n  const dispatch = useDispatch();\n  const [count,setCount] = useState(0);\n\n  useEffect( () => {\n    dispatch(sendResult(count));\n  });\n\n  return (\n    <div className=\"App\">\n      <button id='inc' onClick={()=>setCount(count+1)}>inc</button>\n      <button id='dec' onClick={()=>setCount(count-1)}>dec</button>\n      <div>main functional Comp local state {count}</div>\n      <Comp />\n    </div>\n  );\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const reducer = (state = 0,action)=>{\n    switch(action.type){\n        case 'RESULT':\n            return action.result;\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport reducer from './Redux/Reducer/reducer'\n\nconst store = createStore(reducer);\n// store.subscribe(()=>{console.log(store.getState())});\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}